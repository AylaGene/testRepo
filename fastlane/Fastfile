# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.68.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "assembleRelease")
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
  end

  desc "make a hotfix release, developers make a PR from hotfix branch to master branch, merge PR, than run command like"
	desc " fastlane hotrelease version_number:\"1.0.28\" release_title:\"1.0.28 Release\" release_notes:\"1: eat well; 2: sleep well."
  lane :hotrelease do |options|
	  release_number= options[:version_number]
	  v="v"+release_number
		git_command(full_command: "git checkout master")
	  ensure_git_branch(branch: "master")
		git_add(path: ".")
		git_commit(path: ".", message: v+" changes")
		push_to_git_remote(remote: "origin");
		git_pull
		ensure_git_status_clean
		push_to_git_remote(remote: "public");
		#draft publish which will create the tag on public
		set_github_release(api_token: ENV["GITHUB_API_TOKEN"], repository_name: "AylaGene/testRepo_Public", tag_name: v, name: v+" Release", description: options[:release_title] + options[:release_notes])
		# pull tag to local
		git_command(full_command: "git pull public master --tags");
		# push tag to origin
		push_to_git_remote(remote: "origin");

    # create a release branch
		git_command(full_command: "git checkout -b release/#{release_number} #{v}")
		git_command(full_command: "git push -u origin release/#{release_number}")
		git_command(full_command: "git push public release/#{release_number}")
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
